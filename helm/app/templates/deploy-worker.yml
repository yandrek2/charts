---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{.Values.app.name}}
    stack: {{.Values.app.name}}
  name: {{.Values.app.name}}-worker
  namespace: {{.Values.app.namespace}}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{.Values.app.name}}-worker
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{.Values.app.name}}-worker
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: {{.Values.app.name}}
            optional: false
        image: {{.Values.app.image}}
        name: webserver
        imagePullPolicy: Always
        args:
        - cd /home/app/webapp ; /usr/sbin/cron; su -c ./init-worker.sh app
        command:
        - /bin/sh
        - -c
       resources:
         limits:
           cpu: "1"
           memory: 2Gi
         requests:
           cpu: 200m
           memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /home/app/webapp/log
          name: vol1
          subPath: log
        - mountPath: /home/app/webapp/public/appcomm
          name: vol1
          subPath: public/appcomm
        - mountPath: /home/app/webapp/public/chatcomm
          name: vol1
          subPath: public/chatcomm
        - mountPath: /home/app/webapp/public/system
          name: vol1
          subPath: public/system
        - mountPath: /tmp/pdfs
          name: vol1
          subPath: tmppdfs
        - mountPath: /home/app/webapp/reports
          name: vol1
          subPath: reports
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vol1
        persistentVolumeClaim:
          claimName: efs-pvc-{{.Values.app.name}}