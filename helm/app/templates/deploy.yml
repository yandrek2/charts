apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{.Values.app.name}}
    stack: {{.Values.app.name}}
  name: {{.Values.app.name}}
  namespace: {{.Values.app.namespace}}
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{.Values.app.name}}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{.Values.app.name}}
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: {{.Values.app.name}}
            optional: false
        image: {{.Values.app.image}}
        name: webserver
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: Host
              value: {{.Values.app.host}}
            - name: X-Forwarded-Proto
              value: https
            path: /users/sign_in
            port: 80
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: Host
              value: {{.Values.app.host}}
            - name: X-Forwarded-Proto
              value: https
            path: /users/sign_in
            port: 80
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 2
          timeoutSeconds: 2
        resources:
          limits:
            cpu: "1"
            memory: 4Gi
          requests:
            cpu: 200m
            memory: 2Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /home/app/webapp/log
          name: vol1
          subPath: log
        - mountPath: /home/app/webapp/public/appcomm
          name: vol1
          subPath: public/appcomm
        - mountPath: /home/app/webapp/public/chatcomm
          name: vol1
          subPath: public/chatcomm
        - mountPath: /home/app/webapp/public/system
          name: vol1
          subPath: public/system
        - mountPath: /tmp/pdfs
          name: vol1
          subPath: tmppdfs
        - mountPath: /home/app/webapp/reports
          name: vol1
          subPath: reports
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vol1
        persistentVolumeClaim:
          claimName: efs-pvc-{{.Values.app.name}}
